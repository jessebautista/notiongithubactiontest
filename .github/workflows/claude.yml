# .github/workflows/claude.yml
name: Claude Code Generator

on:
  issues:
    types: [opened]
  workflow_dispatch:

jobs:
  claude-generate:
    if: github.event_name == 'workflow_dispatch' || contains(github.event.issue.body, '@claude')
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug Issue Content
        if: github.event_name == 'issues'
        run: |
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue Body: ${{ github.event.issue.body }}"
          echo "Issue Number: ${{ github.event.issue.number }}"

      - name: Call Claude API
        id: claude-call
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Create the prompt
          PROMPT="Based on this GitHub issue, generate code to address the request:

          Title: ${{ github.event.issue.title }}
          
          Body: ${{ github.event.issue.body }}
          
          Please provide a specific code solution with file paths and implementation."

          # Call Claude API
          RESPONSE=$(curl -s https://api.anthropic.com/v1/messages \
            -H "Content-Type: application/json" \
            -H "x-api-key: $ANTHROPIC_API_KEY" \
            -H "anthropic-version: 2023-06-01" \
            -d '{
              "model": "claude-3-sonnet-20240229",
              "max_tokens": 4000,
              "messages": [
                {
                  "role": "user",
                  "content": "'"$(echo "$PROMPT" | sed 's/"/\\"/g')"'"
                }
              ]
            }')

          echo "Claude Response:"
          echo "$RESPONSE"
          
          # Extract the content
          CONTENT=$(echo "$RESPONSE" | jq -r '.content[0].text // empty')
          echo "Extracted Content:"
          echo "$CONTENT"
          
          # Save to file
          echo "$CONTENT" > claude_response.txt
          echo "response_file=claude_response.txt" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.claude-call.outputs.response_file
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Create a new branch
          BRANCH_NAME="claude-fix-issue-${{ github.event.issue.number }}"
          git checkout -b "$BRANCH_NAME"
          
          # Read Claude's response
          CLAUDE_RESPONSE=$(cat claude_response.txt)
          
          # Create a simple file with Claude's suggestion
          echo "# Claude's Code Suggestion for Issue #${{ github.event.issue.number }}" > claude-suggestion.md
          echo "" >> claude-suggestion.md
          echo "## Original Issue" >> claude-suggestion.md
          echo "**Title:** ${{ github.event.issue.title }}" >> claude-suggestion.md
          echo "" >> claude-suggestion.md
          echo "**Body:**" >> claude-suggestion.md
          echo "${{ github.event.issue.body }}" >> claude-suggestion.md
          echo "" >> claude-suggestion.md
          echo "## Claude's Response" >> claude-suggestion.md
          echo "" >> claude-suggestion.md
          echo "$CLAUDE_RESPONSE" >> claude-suggestion.md
          
          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Add and commit
          git add claude-suggestion.md
          git commit -m "feat: Claude's code suggestion for issue #${{ github.event.issue.number }}"
          
          # Push branch
          git push origin "$BRANCH_NAME"
          
          # Create PR using GitHub CLI
          gh pr create \
            --title "ðŸ¤– Claude's solution for issue #${{ github.event.issue.number }}" \
            --body "This PR contains Claude's suggested solution for issue #${{ github.event.issue.number }}.

          ## Original Issue
          ${{ github.event.issue.title }}

          ## Claude's Analysis
          Claude has analyzed the issue and provided the following solution:

          \`\`\`
          $CLAUDE_RESPONSE
          \`\`\`

          Please review and implement as needed." \
            --base main \
            --head "$BRANCH_NAME"

      - name: Comment on Issue
        if: always()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh issue comment ${{ github.event.issue.number }} --body "ðŸ¤– I've analyzed your issue and created a pull request with my suggested solution. Please check the PR for details!"